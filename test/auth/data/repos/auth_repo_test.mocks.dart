// Mocks generated by Mockito 5.3.2 from annotations
// in deliverzler/test/auth/data/repos/auth_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:connectivity_plus/connectivity_plus.dart' as _i8;
import 'package:deliverzler/auth/data/data_sources/auth_local_data_source.dart'
    as _i6;
import 'package:deliverzler/auth/data/data_sources/auth_remote_data_source.dart'
    as _i3;
import 'package:deliverzler/auth/data/models/user_model.dart' as _i2;
import 'package:deliverzler/auth/domain/use_cases/sign_in_with_email_uc.dart'
    as _i5;
import 'package:deliverzler/core/data/network/network_info.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IAuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAuthRemoteDataSource extends _i1.Mock
    implements _i3.IAuthRemoteDataSource {
  MockIAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserModel> signInWithEmail(
          _i5.SignInWithEmailParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmail,
          [params],
        ),
        returnValue: _i4.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #signInWithEmail,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.UserModel>);
  @override
  _i4.Future<String> getUserAuthUid() => (super.noSuchMethod(
        Invocation.method(
          #getUserAuthUid,
          [],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<_i2.UserModel> getUserData(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [uid],
        ),
        returnValue: _i4.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #getUserData,
            [uid],
          ),
        )),
      ) as _i4.Future<_i2.UserModel>);
  @override
  _i4.Future<void> setUserData(_i2.UserModel? userModel) => (super.noSuchMethod(
        Invocation.method(
          #setUserData,
          [userModel],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [IAuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAuthLocalDataSource extends _i1.Mock
    implements _i6.IAuthLocalDataSource {
  MockIAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> cacheUserData(_i2.UserModel? userModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheUserData,
          [userModel],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i2.UserModel> getUserData() => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [],
        ),
        returnValue: _i4.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #getUserData,
            [],
          ),
        )),
      ) as _i4.Future<_i2.UserModel>);
  @override
  _i4.Future<void> clearUserData() => (super.noSuchMethod(
        Invocation.method(
          #clearUserData,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [INetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockINetworkInfo extends _i1.Mock implements _i7.INetworkInfo {
  MockINetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get hasInternetConnection => (super.noSuchMethod(
        Invocation.getter(#hasInternetConnection),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<_i8.ConnectivityResult> get hasNetworkConnectivity =>
      (super.noSuchMethod(
        Invocation.getter(#hasNetworkConnectivity),
        returnValue: _i4.Future<_i8.ConnectivityResult>.value(
            _i8.ConnectivityResult.bluetooth),
      ) as _i4.Future<_i8.ConnectivityResult>);
}
