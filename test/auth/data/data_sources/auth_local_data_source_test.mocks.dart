// Mocks generated by Mockito 5.3.2 from annotations
// in deliverzler/test/auth/data/data_sources/auth_local_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:deliverzler/core/data/local/local_storage_caller/i_local_storage_caller.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ILocalStorageCaller].
///
/// See the documentation for Mockito's code generation for more information.
class MockILocalStorageCaller extends _i1.Mock
    implements _i2.ILocalStorageCaller {
  MockILocalStorageCaller() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> saveData({
    required String? key,
    required dynamic value,
    required _i2.DataType? dataType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveData,
          [],
          {
            #key: key,
            #value: value,
            #dataType: dataType,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<dynamic> restoreData({
    required String? key,
    required _i2.DataType? dataType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreData,
          [],
          {
            #key: key,
            #dataType: dataType,
          },
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
  @override
  _i3.Future<bool> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> clearKey({required dynamic key}) => (super.noSuchMethod(
        Invocation.method(
          #clearKey,
          [],
          {#key: key},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  dynamic getSetMethod({required _i2.DataType? sharedPrefsMethod}) =>
      super.noSuchMethod(Invocation.method(
        #getSetMethod,
        [],
        {#sharedPrefsMethod: sharedPrefsMethod},
      ));
  @override
  dynamic getGetMethod({required _i2.DataType? sharedPrefsMethod}) =>
      super.noSuchMethod(Invocation.method(
        #getGetMethod,
        [],
        {#sharedPrefsMethod: sharedPrefsMethod},
      ));
}
